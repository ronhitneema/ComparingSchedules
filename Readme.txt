The project presents a new CPU scheduling algorithm called SJRR CPU Scheduling Algorithm which is based on traditional round robin algorithm. Projects also contains the comparison of proposed algorithm with traditional round robin algorithm. The result of the comparison for different process sets using different scheduling algorithms. The Project also explain how proposed algorithm improve the performance of traditional one. One of the most important components of the computer resource is the CPU. CPU scheduling involves a careful examination of pending processes to determine the most efficient way to service the requests. Many CPU scheduling algorithms have been presented having some advantages and disadvantages. In this project an improved round robin CPU scheduling algorithm is proposed. Simulation results shows that the proposed IRR CPU scheduling algorithm is always giving better performance than RR. After improvement in RR it has been found that the waiting time and turnaround time have been reduced drastically. This algorithm can be implemented to improve the performance in the systems in which RR is a preferable choice. This project establishes the fact that an ideal scheduling algorithm should minimize the response time, maximize the throughput, minimize the overhead (in terms of CPU utilization, disk and memory) and maximize fairness. However, it is palpable from this project 

 
that none of the scheduling algorithms considered satisfies all of the aforementioned requirements. 
Hence, the contribution to knowledge made by this project is that based on the most prioritized requirement of a particular user, the scheduling algorithm that best satisfies that requirement as outlined in this project can be selected for use thereby allowing the user get awesome results without having to waste valuable time. In future, another researcher can do further research in order to discover another scheduling algorithm that will be ideal thereby satisfying all the aforementioned requirements and consequently offering optimum satisfaction to the user. 